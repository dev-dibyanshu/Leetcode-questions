https://leetcode.com/problems/maximum-candies-allocated-to-k-children/?envType=daily-question&envId=2025-03-14

class Solution {
public:
    int checker(vector<int> candies, long long k, int mid){
        if(mid ==0) return false;
        long long kid =0;
        for(int i=0;i<candies.size();i++){
            kid += candies[i] / mid;
        }
        return kid >= k;
    }
    int maximumCandies(vector<int>& candies, long long k) {
        if(!checker(candies, k , 1)) return 0;
        int m = *max_element(candies.begin(), candies.end());
        int l=1, r = m;
        int mid = (l+r)/2;
        int maxi =l;
        while(r >= l){
            if(checker(candies, k, mid)){
                maxi = max(maxi, mid);
                l = mid + 1;
            }
            else{
                r= mid -1;
            }
            cout<<l<<" ";
            mid = (l+r)/2;
        }
        return maxi;
    }
};
