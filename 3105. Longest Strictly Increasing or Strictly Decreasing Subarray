https://leetcode.com/problems/longest-strictly-increasing-or-strictly-decreasing-subarray/description/

class Solution {
public:
    int longestMonotonicSubarray(vector<int>& nums) {
        int maxLen=1;
        int count=1;
        for(int i=0;i<nums.size()-1;i++){
            int count =1;
            for(int j=i;j< nums.size()-1;j++){
                if(nums[j] < nums[j+1]){ 
                    count++; 
                    maxLen =max(maxLen, count);
                }
                else{
                    break;
                }
            }
        }
        
        for(int i=0;i<nums.size()-1;i++){
            int count =1;
            for(int j=i;j < nums.size()-1;j++){
                if(nums[j] > nums[j+1]){ 
                    count++; 
                    maxLen =max(maxLen, count);
                }
                else{
                    break;
                }
            }
        }
        return maxLen;
    }
};
