https://leetcode.com/problems/longest-nice-subarray/?envType=daily-question&envId=2025-03-18

class Solution {
public:
    int longestNiceSubarray(vector<int>& nums) {
        int left = 0, right = 0, bitmask = 0, maxLen = 0;

        while (right < nums.size()) {
            while ((bitmask & nums[right]) != 0) {
                bitmask ^= nums[left]; // Remove left element from bitmask
                left++;
            }

            bitmask |= nums[right]; // Add right element to bitmask
            maxLen = max(maxLen, right - left + 1);
            right++;
        }

        return maxLen;
    }
};
