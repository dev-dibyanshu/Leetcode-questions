https://leetcode.com/problems/number-of-enclaves/

class Solution {
public:
    int dfs(vector<vector<int>>& grid, int i, int j, vector<vector<int>>& vis, int& count){
        if(i < 0 || j < 0 || i >= grid.size() || j >= grid[0].size() || vis[i][j] == 1 || grid[i][j] == 0){
            return false;
        }

        vis[i][j] = 1;
        count++;  

        bool isOnBoundary = (i == 0 || j == 0 || i == grid.size() - 1 || j == grid[0].size() - 1);

        bool right = dfs(grid, i + 1, j, vis, count);
        bool left = dfs(grid, i - 1, j, vis, count);
        bool bottom = dfs(grid, i, j + 1, vis, count);
        bool top = dfs(grid, i, j - 1, vis, count);

        return isOnBoundary || right || left || bottom || top;
    }

    int numEnclaves(vector<vector<int>>& grid) {
        int answer = 0;
        vector<vector<int>> vis(grid.size(), vector<int>(grid[0].size(), 0));

        for (int i = 0; i < grid.size(); i++) {
            for (int j = 0; j < grid[0].size(); j++) {
                if (!vis[i][j] && grid[i][j] == 1) {  
                    int count = 0;  
                    bool touchesBorder = dfs(grid, i, j, vis, count);
                    
                    if (!touchesBorder) {  
                        answer += count;
                    }
                }
            }
        }
        return answer;
    }
};










